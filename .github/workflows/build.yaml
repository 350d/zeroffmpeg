name: 🎬 Build FFmpeg for Raspberry Pi Zero 🥧

on: [workflow_dispatch]

jobs:
  build:
    name: 🚀 Cross-compile FFmpeg for ARMv6
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3

      - name: 🏗️  Build with optimized Docker
        run: |
          echo "🏗️  =============== BUILDING WITH DOCKER ==============="
          echo "📦 Using multi-stage Dockerfile with cached dependencies..."
          
          # Build using the optimized Dockerfile with verbose output
          echo "🔧 Building Docker image..."
          if docker build --target output -t zeroffmpeg:latest . 2>&1; then
            echo "✅ Docker build completed successfully!"
          else
            echo "❌ Docker build failed!"
            echo "🔍 Trying to build intermediate stages for debugging..."
            docker build --target deps-builder -t debug-deps . || echo "❌ deps-builder stage failed"
            docker build --target ffmpeg-builder -t debug-ffmpeg . || echo "❌ ffmpeg-builder stage failed"
            exit 1
          fi
          
          echo "📊 Docker build results:"
          docker images | grep zeroffmpeg

      - name: 📤 Extract binaries from Docker
        run: |
          echo "📤 =============== EXTRACTING BINARIES ==============="
          
          # First, let's see if the Docker build was successful
          echo "🔍 Checking Docker images:"
          docker images | grep zeroffmpeg || echo "❌ No zeroffmpeg image found"
          
          # Create temporary container (scratch image, no shell tools available)
          echo "🔍 Creating container from scratch-based image..."
          docker create --name temp-zeroffmpeg zeroffmpeg:latest
          echo "📁 Note: Using FROM scratch, so no internal inspection possible"
          
          # Try to extract binaries
          mkdir -p install/bin
          echo "📤 Attempting to extract ffmpeg..."
          if docker cp temp-zeroffmpeg:/ffmpeg install/bin/ffmpeg 2>/dev/null; then
            echo "✅ ffmpeg extracted successfully"
          else
            echo "❌ Failed to extract ffmpeg from /ffmpeg"
            echo "⚠️  Note: Cannot search inside scratch container (no find command)"
          fi
          
          echo "📤 Attempting to extract ffprobe..."
          if docker cp temp-zeroffmpeg:/ffprobe install/bin/ffprobe 2>/dev/null; then
            echo "✅ ffprobe extracted successfully"
          else
            echo "⚠️  ffprobe not found (this is normal, we only build ffmpeg)"
          fi
          
          # Clean up
          docker rm temp-zeroffmpeg
          
          # Make binaries executable if they exist
          if [ -f install/bin/ffmpeg ]; then
            chmod +x install/bin/ffmpeg
            echo "✅ Made ffmpeg executable"
          fi
          if [ -f install/bin/ffprobe ]; then
            chmod +x install/bin/ffprobe
            echo "✅ Made ffprobe executable"
          fi
          
          echo "📊 Final extraction results:"
          ls -la install/bin/ || echo "❌ install/bin directory is empty"

      - name: 🧪 Verify build artifacts
        run: |
          echo "🧪 =============== VERIFYING BUILD ARTIFACTS ==============="
          if [ -f "install/bin/ffmpeg" ]; then
            echo "✅ FFmpeg binary found!"
            echo "📊 Binary size: $(ls -lh install/bin/ffmpeg | awk '{print $5}')"
            echo "🏗️  Architecture: $(file install/bin/ffmpeg | grep -o 'ARM.*')"
            echo "🔍 ELF Header info:"
            readelf -h install/bin/ffmpeg | grep -E "(Class|Machine|Entry)" || echo "📋 ELF info not available"
            echo "🔗 Dependencies check:"
            ldd install/bin/ffmpeg 2>/dev/null && echo "⚠️  Dynamic linking detected" || echo "✅ Static binary confirmed"
          else
            echo "❌ FFmpeg binary not found!"
            echo "📁 Available files in install/bin:"
            ls -la install/bin/ || echo "❌ install/bin directory not found"
            exit 1
          fi
          
          if [ -f "install/bin/ffprobe" ]; then
            echo "✅ FFprobe binary found!"
            echo "📊 FFprobe size: $(ls -lh install/bin/ffprobe | awk '{print $5}')"
          else
            echo "⚠️  FFprobe binary not found"
          fi

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: 🎬-ffmpeg-armv6-static-🥧
          path: install/bin/
          if-no-files-found: error
